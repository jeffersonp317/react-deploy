{"version":3,"sources":["component/modal.js","PersonList.js","index.js"],"names":["Modal","props","useState","valueInsert_card","setvalueInsert_card","card_number","setcard_number","selectedCard","setselectedCard","cards","id","cvv","expiry_date","style","display","className","name","onClick","displayNone","onChange","event","target","value","type","placeholder","map","card","substr","evt","preventDefault","console","log","forEach","body","JSON","stringify","destination_user_id","axios","post","then","res","data","status_pagamento","PersonList","state","show","persons","selectedName","selectedID","selectedUsername","modalConfirmacao","transacao_pagamento","CloseModal2","isActive","status","setState","personname","personid","personusername","CloseModal","get","this","person","index","src","img","alt","username","userName","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0966e9af.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport React, { useState } from 'react'\r\n\r\n\r\n\r\n\r\n//--------------------------------------------Função da Modal-----------------------------------------------------\r\nfunction Modal(props) {\r\n\r\n    const [valueInsert_card, setvalueInsert_card] = useState(\"\")\r\n    const [card_number, setcard_number] = useState(\"\")\r\n    const [selectedCard, setselectedCard] = useState(\"\")\r\n   \r\n\r\n    let cards = [\r\n        // valid card\r\n        {   id: 0,\r\n            card_number: '1111111111111111',\r\n            cvv: 789,\r\n            expiry_date: '01/18',\r\n        },\r\n        // invalid card\r\n        {   id: 1,\r\n            card_number: '4111111111111234',\r\n            cvv: 123,\r\n            expiry_date: '01/20',\r\n        },\r\n\r\n    ];\r\n\r\n    \r\n    \r\n    \r\n    function valido(evt) {\r\n        evt.preventDefault()\r\n        props.displayNone()\r\n        console.log(\"card number\", card_number)\r\n     \r\n        \r\n        \r\n        console.log('cartao 1', card_number)\r\n\r\n        cards.forEach( (card) => {\r\n            if (card_number == card.card_number ) {\r\n                setselectedCard(card)\r\n            }\r\n        });\r\n\r\n        let body = JSON.stringify({\r\n            // Card Info\r\n            card_number: card_number,\r\n            cvv: selectedCard.cvv,\r\n            expiry_date: selectedCard.expiry_date,\r\n\r\n            // Destination User ID\r\n            destination_user_id: props.id,\r\n\r\n            // Value of the Transaction\r\n            value: valueInsert_card\r\n        });\r\n\r\n        if (card_number == '1111111111111111') {\r\n            axios.post(`https://run.mocky.io/v3/533cd5d7-63d3-4488-bf8d-4bb8c751c989`, { body })\r\n            .then(res => {\r\n              console.log(res);\r\n              console.log(res.data);\r\n              props.status_pagamento(true)\r\n            })\r\n        }\r\n           \r\n        \r\n        else {\r\n            axios.post(`https://run.mocky.io/v3/533cd5d7-63d3-4488-bf8d-4bb8c751c989`, { body })\r\n            .then(res => {\r\n              console.log(res);\r\n              console.log(res.data);\r\n              props.status_pagamento(false)\r\n            })\r\n          \r\n           \r\n           \r\n        }\r\n        return\r\n    }\r\n   \r\n\r\n    \r\n\r\n\r\n    return (\r\n\r\n        <div style={{ display: props.display }} className=\"modal\">\r\n            <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <div className=\"modal-title\">\r\n                        <h4 >\r\n                            Pagamento para <h4 className=\"modal-user\">{props.name}</h4>\r\n                        </h4>\r\n                    </div>\r\n                    <div className=\"close-modal\" onClick={props.displayNone}>X</div>\r\n                </div>\r\n\r\n                <form>\r\n                    <div className=\"modal-caixa-valor\">\r\n                        <input onChange={ event => setvalueInsert_card(event.target.value) } className=\"modal-valor\" type=\"text\" placeholder=\"R$\"></input>\r\n                    </div>\r\n                    <div className=\"modal-caixa-cartao\">\r\n                        <select onChange={ event => setcard_number(event.target.value) } id=\"select_card\" className=\"select-cartao\">\r\n\r\n                            <option value=\"selecione\" id=\"selecione\">\r\n                                selecione o cartão\r\n                                    </option>\r\n\r\n\r\n                            {cards.map(\r\n                                card => (\r\n                                    <option value={card.card_number} key={card.id} id=\"opção_cartao\">\r\n                                        Cartão com o final {card.card_number.substr(-4)}\r\n                                    </option>\r\n                                    \r\n                                )\r\n                            )}\r\n\r\n                        </select>\r\n                    </div>\r\n                    <div >\r\n                        <button type=\"submit\" onClick={valido} className=\"modal-pagar\" >Pagar</button>\r\n                    </div>\r\n                </form>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    \r\n}\r\n\r\n\r\nexport default Modal","import React, { Component, setState } from 'react';\nimport axios from 'axios';\nimport Modal from './component/modal';\n\n\n\n//-------------------------------------Classe responsável pela lista de usuários--------------------------------------\nexport default class PersonList extends React.Component {\n\n    state = {\n        display: \"none\",\n        show: false,\n        persons: [],\n        selectedName: \"\",\n        selectedID: \"\",\n        selectedUsername: \"\",\n        modalConfirmacao: \"none\",\n        transacao_pagamento: false,\n        CloseModal2: {display: \"none\"},\n        isActive: false\n\n\n\n\n    };\n\nstatus_pagamento = (status) => {\n    this.setState({transacao_pagamento:status, modalConfirmacao: \"block\"})\n    console.log(\"status\", status)\n    \n}\n\n    Modal = (personname, personid, personusername) => {\n        console.log(personid)\n\n        this.setState({\n            selectedID: personid,\n            selectedName: personname,\n            selectedUsername: personusername,\n            display: \"block\"\n        }\n        );\n\n    }\n\n    CloseModal2 = () => {\n\n        this.setState({ modalConfirmacao: \"none\" })\n\n    }\n\n    CloseModal = () => {\n\n        this.setState({ display: \"none\" })\n\n    }\n\n    \n\n\n\n\n    componentDidMount() {\n        axios.get(`https://www.mocky.io/v2/5d531c4f2e0000620081ddce`)\n            .then(res => {\n                const persons = res.data;\n                this.setState({ persons: persons })\n\n\n            })\n    }\n\n\n\n    render() {\n        \n        return (\n            <div className=\"list\">\n                {this.state.persons.map((person, index) => {\n\n                    return (\n                        <div key={\"lista-usuarios\" + index} className=\"listClients\">\n                            <div className=\"imgClients\">\n                                <img src={person.img} className=\"Clients\" alt=\"imagem do usuario\" />\n                            </div>\n                            <div className=\"idClients\">\n                                <p>{person.name}</p>\n                                <p>Id: {person.id} - Username: {person.username}</p>\n                            </div>\n\n\n                            <div className=\"box_btn\">\n                                <button type=\"button\" className=\"btn\" onClick={() => this.Modal(person.name, person.id, person.username)}>Pagar</button>\n\n\n\n                            </div>\n\n                        </div>\n                    )\n                }\n\n\n\n                )}\n\n                <Modal displayNone={this.CloseModal} show={this.state.show}\n                    display={this.state.display} name={this.state.selectedName}\n                    id={this.state.selectedID} userName={this.state.selectedUsername}\n                    status_pagamento={this.status_pagamento}>\n                </Modal>\n                \n\n                <div style={{ display: this.state.modalConfirmacao }} className=\"modal-2\">\n                    <div className=\"header-modal2\">\n                        <h4 className=\"recibo\">Recibo de pagamento</h4>\n                        {}\n                        <div className=\"close-modal2\" onClick={this.CloseModal2}>X</div>\n                    </div>\n                    <div className=\"texto-status\">\n                        O pagamento {this.state.transacao_pagamento ? \"\": \"não\"} foi aprovado  com sucesso!\n                    </div>\n                    \n                </div>\n\n            </div>\n\n        )\n\n    }\n}\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport PersonList from './PersonList';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <PersonList />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}